#!/usr/bin/env python3

import argparse
import sys

from filelock import SoftFileLock as FileLock
from typing import List


def main(args: List[str]):
    """
    The main function

    Arguments:
        args {List[str]} -- input arguments for main
    """

    parser = argparse.ArgumentParser(description="pylock-based file lock redirector")
    parser.add_argument(
        "stdin", nargs="?", type=argparse.FileType("r"), default=sys.stdin
    )
    parser.add_argument(
        "--start", type=str, help="Chunk start line", default="Begin chunk"
    )
    parser.add_argument("--stop", type=str, help="Chunk stop line", default="End chunk")
    parser.add_argument(
        "--buffer",
        type=int,
        help="Size of the chunk buffer (in number of chunks)",
        default=4,
    )
    parser.add_argument("fout", type=str, help="Out file")
    args = parser.parse_args()

    buffer = []
    start = lambda s: args.start in s
    stop = lambda s: args.stop in s

    lock = FileLock(f"{args.fout}.lock")
    end_header = False
    counter = 0
    for line in args.stdin:
        buffer.append(line)
        if stop(line):
            if not end_header:
                end_header = True
            if counter < args.buffer:
                counter += 1
                continue
            else:
                with lock:
                    with open(args.fout, "a") as fout:
                        fout.writelines(buffer)
                buffer = []
                counter = 0


if __name__ == "__main__":
    main(sys.argv[1:])
